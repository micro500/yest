---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Static website hosting with S3'
Parameters:
  BucketName:
    Description: Bucket name
    Type: String
    Default: 'example'
Resources:
  # Create the bucket to contain the website HTML
  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: PublicRead
      BucketName: !Sub '${BucketName}'
      WebsiteConfiguration:
        ErrorDocument: 'error.html'
        IndexDocument: 'index.html'
  MyRestApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Description: A test API
      Name: MyRestAPI
  Stack:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref MyRestApi
      ParentId: !GetAtt 
        - MyRestApi
        - RootResourceId
      PathPart: stack
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*
  primer:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.7
      Role: !GetAtt LambdaExecutionRole.Arn
      Handler: index.lambda_handler
      Code:
        ZipFile: |
          import json

          def lambda_handler(event, context):
              # TODO implement
              return {
                  'statusCode': 200,
                  'body': json.dumps('Hello from Lambda!')
              }
      Description: Invoke a function during stack creation.
  ProxyResourceANY:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref MyRestApi
      ResourceId: !Ref Stack
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${primer.Arn}/invocations
Outputs:
  BucketName:
    Description: 'S3 Bucket Name'
    Value: !Ref S3Bucket